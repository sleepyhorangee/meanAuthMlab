{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/forget/forget.component.css","webpack:///./src/app/components/forget/forget.component.html","webpack:///./src/app/components/forget/forget.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/reset/reset.component.css","webpack:///./src/app/components/reset/reset.component.html","webpack:///./src/app/components/reset/reset.component.ts","webpack:///./src/app/components/user-model/user-model.component.css","webpack:///./src/app/components/user-model/user-model.component.html","webpack:///./src/app/components/user-model/user-model.component.ts","webpack:///./src/app/components/verify/verify.component.css","webpack:///./src/app/components/verify/verify.component.html","webpack:///./src/app/components/verify/verify.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <ng4-loading-spinner> </ng4-loading-spinner>\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule , FormsModule } from '@angular/forms';\nimport {ValidateService} from './services/validate.service';\nimport {AuthService} from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\nimport { DataTablesModule } from 'angular-datatables';\n\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserModelComponent } from './components/user-model/user-model.component';\nimport { VerifyComponent } from './components/verify/verify.component';\nimport { ForgetComponent } from './components/forget/forget.component';\nimport { ResetComponent } from './components/reset/reset.component';\n\n\nconst appRoutes: Routes =  [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'forget', component: ForgetComponent},\n  {path:'verify/:token', component: VerifyComponent},\n  {path:'reset/:token', component: ResetComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    RegisterComponent,\n    UserModelComponent,\n    VerifyComponent,\n    ForgetComponent,\n    ResetComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DataTablesModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    NgbModule.forRoot(),\n    Ng4LoadingSpinnerModule.forRoot()\n  ],\n  providers: [ValidateService,AuthService,AuthGuard,NgbActiveModal],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Dashboard</h2>\\n<p>Welcome to your Dashboard!!!</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<div class=\\\"alert alert-success\\\" *ngIf=\\\"emailVerificationResposne\\\">\\n  <strong>Success!</strong> {{emailVerificationResposne}}\\n</div>\\n\\n\\n<!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"submitForget()\\\">\\n\\n\\n  <!-- Email Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <div>\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\"  class=\\\"text-danger\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\" class=\\\"text-danger\\\">This must be a valid e-mail</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Submit Input -->\\n  <input  [disabled]=\\\" !processing\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n</form>\\n<!-- Registration Form /-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport * as alertify from 'alertify.js';\nimport {Router} from '@angular/router';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\ndeclare var $:any\n\n@Component({\n  selector: 'app-forget',\n  templateUrl: './forget.component.html',\n  styleUrls: ['./forget.component.css']\n})\nexport class ForgetComponent implements OnInit {\n\n  form;\n  processing:boolean = false;\n  emailVerificationResposne:any;\n \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) {\n    this.createForm();\n   }\n\n  ngOnInit() {\n   \n  }\n\n\n   \n\n   // Function to validate e-mail is proper format\n   validateEmail(controls) {\n    // Create a regular expression\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    // Test email against regular expression\n    if (regExp.test(controls.value)) {\n      return null; // Return as valid email\n    } else {\n      return { 'validateEmail': true } // Return as invalid email\n    }\n  }\n\n  submitForget(){\n  \n   const email = this.form.get('email').value;\n   this.authService.forgetPassword(email).subscribe(res=>{  \n     if(res['success'] === true){\n      alertify.logPosition('top right').success('An email has been send to your account ');//example\n     // this.form.get('email').setValue('');\n     this.emailVerificationResposne = res['message'];\n     this.router.navigate(['/forget']);\n    \n     }else{\n      alertify.logPosition('top right').error('Something went wrong please try again ');//example\n      this.form.get('email').setValue('');\n    \n     }\n   });\n  }\n\n\n  // Function to check if e-mail is taken\n  checkEmail() {\n          this.spinnerService.show();\n    // Function from authentication file to check if e-mail is taken\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n      // Check if success true or false was returned from API\n       console.log(data['success']);\n \n      if (data['success'] === false) { \n        this.processing = true;\n        alertify.logPosition('top right').success(\"Email is verified\");//example\n       \n        this.spinnerService.hide();\n      } else {\n        alertify.logPosition('top right').error(\"Email does not exits \");//example\n        this.form.get('email').setValue('');\n        this.spinnerService.hide();\n      }\n    });\n  }\n\n\n    // Function to create registration form\n    createForm() {\n      this.form = this.formBuilder.group({\n        // Email Input\n        email: ['', Validators.compose([\n          Validators.required, // Field is required\n          this.validateEmail // Custom validation\n        ])],\n       \n        }); // Add custom validator to form for matching passwords\n    }\n\n    \n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n    <h1>MEAN2 Authentication App</h1>\\n    <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch</p>\\n    <div>\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Express Backend</h3>\\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Angular-CLI</h3>\\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>JWT Tokens</h3>\\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: String;\n  password: String;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      email: this.email,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n       \n      if(data['success']){\n        console.log('User from response', data);\n        this.authService.storeUserData(data['token'], data['user']);\n        this.router.navigate(['dashboard']);\n      } else {\n        this.router.navigate(['login']);\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MEAN Auth App</a>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-left\\\">\\n          <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\"><a [routerLink]=\\\"['/']\\\">Home</a></li>\\n        </ul>\\n\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard </a>\\n              </li>\\n              <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile </a>\\n              </li>\\n              <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/forget']\\\">Forget </a>\\n              </li>\\n              <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login </a>\\n              </li>\\n              <li class=\\\"nav-item\\\"  *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\">Register</a>\\n              </li>\\n              <li class=\\\"nav-item\\\" *ngIf=\\\"authService.loggedIn()\\\"><a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\n              </li>\\n        </ul>\\n      </div><!--/.nav-collapse -->\\n    </div>\\n  </nav>\"","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {RegisterComponent} from '../register/register.component';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  @ViewChild(RegisterComponent ) register: RegisterComponent;\n\n  constructor(   private authService:AuthService,\n                 private router:Router,\n                 private flashMessage:FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass:'alert-success',\n      timeout: 3000\n    });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  openModal(){\n    this.register.openModal();\n}\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n    <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">Username : {{user.username}}</li>\\n      <li class=\\\"list-group-item\\\">Email : {{user.email}}</li>\\n    </ul>\\n  </div>\\n  <!-- Buttons -->\\n<!-- Trigger the modal with a button -->\\n<button type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" (click)=\\\"openModal()\\\">Open Modal</button>\\n  <br/>\\n  <table class=\\\"table table-striped table-bordered table-sm row-border hover\\\" datatable [dtOptions]=\\\"dtOptions\\\"\\n    [dtTrigger]=\\\"dtTrigger\\\">\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Action</th>\\n\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let user of users$\\\">\\n        <td>{{ user.username }}</td>\\n        <td>{{ user.email }}</td>\\n        <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\".bd-example-modal-sm\\\" (click)=\\\"openModal(user._id)\\\">Small modal</button></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n<app-register title=\\\"{{title}}\\\" ></app-register>\\n\"","import { Component, OnInit ,OnDestroy,ViewChild } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Observable } from \"rxjs/Observable\";\nimport {RegisterComponent} from '../register/register.component';\n\n\ndeclare var $:any;\n\n@Component({\n\n\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit , OnDestroy{\n\n  @ViewChild(RegisterComponent ) register: RegisterComponent;\n\n  user:object;\n  users$: object[] = [];\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  title:any = '';\n  userId:any = '';\n  timerValue:boolean = false;\n  registerModalShown = false;\n\n\n  constructor(\n              private authService:AuthService,\n              private router:Router,\n\n            ) {\n\n            }\n\n  ngOnInit() {\n\n    this.authService.getProfile().subscribe(profile => {\n\n      this.user = profile['user'];\n      console.log('Profile is ' , this.user);\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n\n     this.dtOptions = {\n           pagingType: 'full_numbers',\n           pageLength: 5,\n           processing: true\n         };\n\n         this.authService.getAllUsers().subscribe(data => {\n           console.log(data);\n           this.users$ = data['users'];\n           this.dtTrigger.next();\n         });\n\n\n\n\n  }\n\n  ngOnDestroy(): void {\n    this.dtTrigger.unsubscribe();\n  }\n\n\n  openModal(id?: string){\n      this.register.openModal();\n      this.register.onRegisterSubmit(id);\n  }\n\n\n  // openModal(id?: string){\n  //   this.register.clearForm();\n  //       this.title = 'Add new user';\n  //       if(id !== undefined){\n\n  //         this.title = 'Update User';\n  //         this.userId = id;\n  //         console.log('UserId is Atif');\n  //         this.register.onRegisterSubmit(this.userId);\n\n\n  //       console.log('Clicked');\n\n  //       }\n\n  //     }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit(id)\\\">\\n\\n  <!-- Username Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div>\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\"  />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\" class=\\\"text-danger\\\">This field is required</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Email Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Password Input -->\\n  <div class=\\\"form-group\\\" >\\n    <label for=\\\"password\\\">Password</label>\\n    <div>\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\" class=\\\"text-danger\\\">This field is required</li>\\n        <li class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\n   <li  class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 50</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Confirm Password Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input type=\\\"hidden\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\"  formControlName=\\\"title\\\" value=\\\"{{title}}\\\" />\\n  </div>\\n\\n  <!-- Submit Input -->\\n  <input  [disabled]=\\\"!form.valid || processing || !emailValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n</form>\\n<!-- Registration Form /-->\\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport {ValidateService} from '../../services/validate.service';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as alertify from 'alertify.js';\ndeclare var $:any;\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n   @Input() title = ``;\n   @Input() userId = '';\n  form;\n  message;\n  messageClass;\n  processing:boolean = false;\n  emailValid;\n  emailMessage ;\n  usernameValid;\n  usernameMessage;\n  user:Object;\n  editUser:boolean;\n\n\n    constructor(\n      private formBuilder: FormBuilder,\n      private authService: AuthService,\n      private router: Router\n    ) {\n      this.createForm(); // Create Angular 2 Form when component loads\n    }\n\n    // Function to create registration form\n    createForm() {\n      this.form = this.formBuilder.group({\n        // Email Input\n        email: ['', Validators.compose([\n          Validators.required, // Field is required\n          Validators.minLength(5), // Minimum length is 5 characters\n          Validators.maxLength(30), // Maximum length is 30 characters\n          this.validateEmail // Custom validation\n        ])],\n        // Username Input\n        username: ['', Validators.compose([\n          Validators.required\n        ])],\n\n        // title Input\n        title: ['', Validators.compose([\n        ])],\n        // Password Input\n        password: ['', Validators.compose([\n          Validators.required, // Field is required\n          Validators.minLength(8), // Minimum length is 8 characters\n        Validators.maxLength(50), // Maximum length is 35 characters\n        ])],\n        // Confirm Password Input\n        confirm: ['', Validators.required] // Field is required\n      }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\n    }\n\n    // Function to disable the registration form\n    disableForm() {\n      this.form.controls['email'].disable();\n      this.form.controls['username'].disable();\n      this.form.controls['password'].disable();\n      this.form.controls['confirm'].disable();\n    }\n\n    // Function to enable the registration form\n    enableForm() {\n      this.form.controls['email'].enable();\n      this.form.controls['username'].enable();\n      this.form.controls['password'].enable();\n      this.form.controls['confirm'].enable();\n    }\n\n    // Function to validate e-mail is proper format\n    validateEmail(controls) {\n      // Create a regular expression\n      const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n      // Test email against regular expression\n      if (regExp.test(controls.value)) {\n        return null; // Return as valid email\n      } else {\n        return { 'validateEmail': true } // Return as invalid email\n      }\n    }\n\n\n\nclearForm(){\n  this.form.controls['username'].setValue('');\n  this.form.controls['email'].setValue('');\n  this.form.controls['password'].setValue('');\n  this.form.controls['confirm'].setValue('');\n\n}\n\n    // Funciton to ensure passwords match\n    matchingPasswords(password, confirm) {\n      return (group: FormGroup) => {\n        // Check if both fields are the same\n        if (group.controls[password].value === group.controls[confirm].value) {\n          return null; // Return as a match\n        } else {\n          return { 'matchingPasswords': true } // Return as error: do not match\n        }\n      }\n    }\n\n\n    // Function to submit form\n    onRegisterSubmit(userId?: string) {\n\n    this.processing = true; // Used to notify HTML that form is in processing, so that it can be disabled\n    //this.disableForm(); // Disable the form\n    // Create user object form user's inputs\n    const user = {\n      email: this.form.get('email').value, // E-mail input field\n      username: this.form.get('username').value, // Username input field\n      password: this.form.get('password').value // Password input field\n    }\n\n    // Function from authentication service to register user\n    this.authService.registerUser(user).subscribe(data => {\n      console.log('response data',data);\n      // Resposne from registration attempt\n      if (data['success'] == 'false') {\n      \n        this.processing = false; // Re-enable submit button\n        this.enableForm(); // Re-enable form\n        alertify.logPosition('top right').error(\"Something went wrong please try again\");//example\n      } else {\n        alertify.logPosition('top right').success(\"User Registered Sucessfully\");//example\n        this.router.navigate(['/login']);\n      }\n    });\n\n\n\n\n\n\n\n\n      \n  }\n\n    // Function to check if e-mail is taken\n    checkEmail() {\n      // Function from authentication file to check if e-mail is taken\n      this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n        // Check if success true or false was returned from API\n\n        if (!data['success']) {\n          this.emailValid = false; // Return email as invalid\n          this.emailMessage = data['message']; // Return error message\n\n        } else {\n          this.emailValid = true; // Return email as valid\n          this.emailMessage = data['message']; // Return success message\n        }\n      });\n    }\n\n\n\n    ngOnInit() {\n      this.emailValid = true;\n      this.emailMessage = '';\n\n    }\n\n    clearMessages(){\n      this.emailMessage = '';\n      this.emailValid = true;\n    }\n\n    openModal(){\n      this.clearMessages();\n      this.clearForm();\n      $('#myModal').modal('show');\n    }\n\n    registerRoute(){\n      this.router.navigate(['register']);\n    }\n\n\n  }\n","module.exports = \"\"","module.exports = \"\\n\\n<!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onResetSubmit()\\\">\\n\\n\\n\\n  \\n\\n  <!-- Password Input -->\\n  <div class=\\\"form-group\\\" >\\n    <label for=\\\"password\\\">New Password</label>\\n    <div>\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\" class=\\\"text-danger\\\">This field is required</li>\\n        <li class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\n   <li  class=\\\"text-danger\\\" *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 50</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Confirm Password Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n \\n\\n  <!-- Submit Input -->\\n  <input   type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n</form>\\n<!-- Registration Form /-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport * as alertify from 'alertify.js';\ndeclare var $:any\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n\n  processing:boolean = false;\n  form;\n  token:any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router :Router\n  ) { \n    this.createForm();\n  }\n\n  ngOnInit() {\n\n    this.route.params.subscribe(\n      params => {\n        this.token = params.token;\n  });\n\n  \n\n  }\n\n\n   // Function to create registration form\n   createForm() {\n    this.form = this.formBuilder.group({\n      // Password Input\n      password: ['', Validators.compose([\n        Validators.required, // Field is required\n        Validators.minLength(8), // Minimum length is 8 characters\n      Validators.maxLength(50), // Maximum length is 35 characters\n      ])],\n      // Confirm Password Input\n      confirm: ['', Validators.required] // Field is required\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\n  }\n\n\n   // Funciton to ensure passwords match\n   matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n      // Check if both fields are the same\n      if (group.controls[password].value === group.controls[confirm].value) {\n        return null; // Return as a match\n      } else {\n        return { 'matchingPasswords': true } // Return as error: do not match\n      }\n    }\n  }\n\n  onResetSubmit(){\n    console.log(this.form.value);\n    console.log(this.token);\n    this.authService.resetPassword(this.token, this.form.value.password ).subscribe(res => {\n\n      if(res['success']){\n \n        alertify.logPosition('top right').success(\"Password has been updated sucessfully\");//example\n        this.router.navigate(['/login']);\n      }\n      \n    });\n    \n    \n  }\n}\n","module.exports = \"\"","module.exports = \"  <!-- Modal -->\\n  <div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n\\n      <!-- Modal content-->\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          <h4 class=\\\"modal-title\\\">{{title}}</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <app-register userId=\\\"{{userId}}\\\"></app-register>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\"","import { Component, OnInit ,Input} from '@angular/core';\ndeclare var $ : any;\n\n@Component({\n  selector: 'app-user-model',\n  templateUrl: './user-model.component.html',\n  styleUrls: ['./user-model.component.css']\n})\nexport class UserModelComponent implements OnInit {\n\n  @Input() title = `Information`;\n  @Input() userId;\n\n  constructor() { \n    \n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  App works\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport * as alertify from 'alertify.js';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n  public token: any;\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router :Router\n  ) { }\n\n  ngOnInit() {\n    \n    // this.token = this.route.snapshot.params;\n    // console.log(this.token);\n\n    this.route.params.subscribe(\n      params => {\n        this.token = params.token;\n         console.log('Parameters are ' , this.token );\n  });\n\n    \n    \n    this.authService.verifyUser(this.token).subscribe(res => {\n      console.log('Response issssssszzz ' , res);\n       alertify.logPosition('top right').success(res['message']);//example\n        this.router.navigate(['/login']);     \n    },\n     err => {\n      alertify.logPosition('top right').error(\"Invalid token\");//example\n      this.router.navigate(['/login']);\n       return false;\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor (private authService:AuthService, private router:Router){\n\n  }\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Http, Headers } from '@angular/http';\nimport { HttpModule } from '@angular/http';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  constructor(private http:HttpClient) { }\n\n\n  registerUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n  }).pipe(map(res =>res));\n  }\n\n\n  authenticateUser(user){\n\n    return this.http.post('http://localhost:3000/users/authenticate',  user, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n  // Forget Password Api Call\n\n  forgetPassword(email){\n    return this.http.post('http://localhost:3000/users/forgetPassword',{email: email}, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n  // Reset Password\n\n  resetPassword(token, password){\n    return this.http.post(\"http://localhost:3000/users/resetPassword/\"+token+\"/\"+password, {\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    }).pipe(map(res =>res));\n  }\n\n\n  getProfile() {\n    this.loadToken();\n    const headers = new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': this.authToken\n    });\n\n    return this.http.get('http://localhost:3000/users/profile', {headers:headers }).pipe(map(res=>res));\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n    console.log('Token is  ' + this.authToken);\n  }\n\n\n\n  loggedIn(){\n\n    if (localStorage.getItem('id_token') == undefined ){\n     return false;\n    } else {\n  const helper = new JwtHelperService();\n    return !helper.isTokenExpired(localStorage.getItem('id_token')); // other people are putting 'id_token'' here but it didn't work for me so i just put the localStorage item\n    }\n   }\n\n\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n\n\n  // Function to check if username is taken\n checkUsername(username) {\n const headers = new HttpHeaders({\n   'Content-Type':  'application/json'\n });\n   return this.http.get('http://localhost:3000/users/checkUsername/' + username,{headers:headers })\n   .pipe(map(res=>res));\n }\n\n\n checkEmail(email) {\n   const headers = new HttpHeaders({\n     'Content-Type':  'application/json'\n   });\n\n   return this.http.get('http://localhost:3000/users/checkEmail/' + email, {headers:headers }).pipe(map(res=>res));\n }\n\n\n getUserById(_id) {\n  const headers = new HttpHeaders({\n    'Content-Type':  'application/json'\n  });\n\n  return this.http.get('http://localhost:3000/users/getUserById/' + _id, {headers:headers }).pipe(map(res=>res));\n}\n\n // Function to get all users records\ngetAllUsers() {\nconst headers = new HttpHeaders({\n  'Content-Type':  'application/json'\n});\n  return this.http.get('http://localhost:3000/users/getAllUsers',{headers:headers })\n  .pipe(map(res=>res));\n}\n\nverifyUser(token){\n  const headers = new HttpHeaders({\n    'Content-Type':  'application/json'\n  });\n    return this.http.get('http://localhost:3000/users/verify/'+ token ,{headers:headers })\n    .pipe(map(res=>res));\n}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}